using Advent_of_Code_2022.libs;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Advent_of_Code_2022
{
    internal class Day18
    {
        //https://adventofcode.com/2022/day/18

        //static string input = "1,1,1\r\n2,1,1\r\n3,1,1\r\n1,3,1\r\n2,3,1\r\n3,3,1\r\n1,2,1\r\n3,2,1\r\n1,1,2\r\n1,1,3";
        //static string input = "2,2,2\r\n1,2,2\r\n3,2,2\r\n2,1,2\r\n2,3,2\r\n2,2,1\r\n2,2,3\r\n2,2,4\r\n2,2,6\r\n1,2,5\r\n3,2,5\r\n2,1,5\r\n2,3,5";
        static string input = "10,2,8\r\n15,6,14\r\n10,13,17\r\n4,15,13\r\n14,5,13\r\n11,12,4\r\n15,3,11\r\n7,1,6\r\n9,4,5\r\n13,3,10\r\n12,13,16\r\n11,1,10\r\n10,18,9\r\n8,17,10\r\n5,17,13\r\n8,17,5\r\n5,7,4\r\n2,6,9\r\n14,16,11\r\n14,13,15\r\n10,17,8\r\n10,8,18\r\n1,11,10\r\n3,12,13\r\n7,3,12\r\n6,16,13\r\n8,9,1\r\n5,13,14\r\n5,6,4\r\n6,10,17\r\n16,6,9\r\n16,11,15\r\n11,8,2\r\n11,4,3\r\n15,8,8\r\n5,15,10\r\n6,3,7\r\n13,6,15\r\n6,4,13\r\n14,17,10\r\n10,7,17\r\n6,4,15\r\n17,12,7\r\n9,6,1\r\n15,16,7\r\n11,17,6\r\n7,3,15\r\n8,3,13\r\n9,8,18\r\n6,4,3\r\n9,1,10\r\n3,4,12\r\n6,17,10\r\n15,12,6\r\n16,5,8\r\n17,11,7\r\n5,16,12\r\n5,3,8\r\n18,9,7\r\n9,2,10\r\n17,13,11\r\n13,17,11\r\n12,15,12\r\n7,8,2\r\n11,2,6\r\n12,4,16\r\n4,16,8\r\n14,2,6\r\n14,9,2\r\n13,7,17\r\n13,3,8\r\n14,4,5\r\n9,15,13\r\n3,14,11\r\n16,12,6\r\n13,13,7\r\n9,16,14\r\n8,18,8\r\n12,7,17\r\n10,10,2\r\n15,4,12\r\n16,11,4\r\n8,16,5\r\n17,12,8\r\n2,8,8\r\n15,16,9\r\n4,7,8\r\n11,4,8\r\n13,5,15\r\n10,1,6\r\n16,8,8\r\n16,14,12\r\n11,17,10\r\n10,6,15\r\n12,4,13\r\n9,7,17\r\n15,6,4\r\n9,10,1\r\n8,7,1\r\n17,6,7\r\n10,18,12\r\n5,12,4\r\n1,7,9\r\n13,12,3\r\n10,3,6\r\n3,6,11\r\n4,6,5\r\n15,3,9\r\n17,8,9\r\n16,10,14\r\n15,5,10\r\n6,3,13\r\n5,16,7\r\n3,5,14\r\n6,11,16\r\n11,16,11\r\n4,12,15\r\n12,5,14\r\n8,17,11\r\n15,7,13\r\n2,14,12\r\n3,12,11\r\n2,6,7\r\n8,16,9\r\n9,12,15\r\n12,16,8\r\n4,6,15\r\n1,12,9\r\n5,7,15\r\n11,1,8\r\n8,4,5\r\n11,11,17\r\n17,8,6\r\n13,14,6\r\n12,15,7\r\n8,18,10\r\n6,10,3\r\n17,10,5\r\n6,6,14\r\n13,12,5\r\n16,12,13\r\n9,3,13\r\n18,7,10\r\n15,13,12\r\n19,8,9\r\n6,14,3\r\n14,5,4\r\n16,8,12\r\n4,15,6\r\n8,16,12\r\n14,15,10\r\n5,10,16\r\n8,4,11\r\n5,4,6\r\n11,14,17\r\n4,10,3\r\n12,5,3\r\n10,6,17\r\n11,11,2\r\n8,18,6\r\n9,14,15\r\n11,7,16\r\n13,15,14\r\n3,6,6\r\n15,13,11\r\n7,12,2\r\n11,17,13\r\n4,15,10\r\n4,11,12\r\n2,11,11\r\n3,13,11\r\n11,10,17\r\n13,16,8\r\n8,8,2\r\n4,10,16\r\n8,6,4\r\n6,8,17\r\n16,13,14\r\n9,14,17\r\n11,17,11\r\n7,16,6\r\n6,15,13\r\n4,8,4\r\n16,8,14\r\n10,4,10\r\n5,2,7\r\n13,9,3\r\n3,14,7\r\n14,3,8\r\n3,8,15\r\n12,7,16\r\n9,9,17\r\n16,5,13\r\n16,6,5\r\n16,10,5\r\n3,6,12\r\n6,16,4\r\n5,14,8\r\n11,14,16\r\n18,8,8\r\n14,12,3\r\n13,7,3\r\n7,16,7\r\n12,10,2\r\n16,14,13\r\n1,7,6\r\n11,2,12\r\n3,11,8\r\n15,15,12\r\n4,12,14\r\n9,13,2\r\n3,13,13\r\n11,5,6\r\n3,8,9\r\n16,10,12\r\n15,14,6\r\n14,7,16\r\n4,12,5\r\n2,12,9\r\n10,5,13\r\n11,13,16\r\n11,3,8\r\n1,10,12\r\n15,14,13\r\n3,13,8\r\n3,14,8\r\n13,15,5\r\n18,9,9\r\n9,7,16\r\n13,9,17\r\n17,9,12\r\n13,10,17\r\n17,11,9\r\n5,14,5\r\n10,4,4\r\n8,14,15\r\n10,17,11\r\n7,17,12\r\n10,1,10\r\n5,5,15\r\n14,5,9\r\n4,4,10\r\n17,11,10\r\n12,16,10\r\n9,1,12\r\n5,12,16\r\n15,11,5\r\n9,6,2\r\n9,7,3\r\n3,11,6\r\n2,6,10\r\n7,8,3\r\n3,7,13\r\n12,12,16\r\n7,3,10\r\n8,8,3\r\n11,13,1\r\n8,15,4\r\n13,3,15\r\n8,15,11\r\n4,7,6\r\n13,5,14\r\n4,8,5\r\n11,3,11\r\n6,14,2\r\n13,5,6\r\n5,4,7\r\n11,16,12\r\n3,10,12\r\n16,7,6\r\n15,13,13\r\n1,9,10\r\n1,9,7\r\n14,11,3\r\n15,17,10\r\n15,13,14\r\n17,8,12\r\n12,11,3\r\n8,8,17\r\n2,14,10\r\n15,5,5\r\n14,14,15\r\n10,15,5\r\n8,10,2\r\n4,9,10\r\n8,15,6\r\n6,5,4\r\n14,4,15\r\n9,3,5\r\n16,6,7\r\n11,3,14\r\n13,6,3\r\n18,11,13\r\n15,4,15\r\n11,6,2\r\n3,10,6\r\n2,9,11\r\n9,14,16\r\n4,14,5\r\n8,17,14\r\n16,11,10\r\n3,9,14\r\n7,10,16\r\n17,7,14\r\n12,17,6\r\n16,6,6\r\n15,8,3\r\n9,2,14\r\n12,1,8\r\n11,8,16\r\n2,11,8\r\n9,4,6\r\n7,15,15\r\n11,14,3\r\n14,11,17\r\n7,9,2\r\n17,11,5\r\n9,16,4\r\n10,17,12\r\n13,5,16\r\n13,11,15\r\n17,11,11\r\n2,12,10\r\n15,8,6\r\n16,10,6\r\n9,2,9\r\n5,4,8\r\n15,4,13\r\n5,6,6\r\n5,9,15\r\n2,7,10\r\n16,8,13\r\n3,12,12\r\n7,17,9\r\n6,15,15\r\n15,5,7\r\n7,5,15\r\n7,2,8\r\n13,2,12\r\n5,8,5\r\n11,13,3\r\n7,8,17\r\n3,7,14\r\n4,15,8\r\n10,14,2\r\n16,15,6\r\n15,4,6\r\n7,13,2\r\n13,16,11\r\n16,14,7\r\n15,14,11\r\n16,10,4\r\n5,10,15\r\n16,13,7\r\n9,17,9\r\n12,16,6\r\n2,7,11\r\n4,5,5\r\n6,7,4\r\n7,13,3\r\n4,5,6\r\n2,9,6\r\n7,12,16\r\n15,4,10\r\n2,13,9\r\n7,5,3\r\n5,13,7\r\n4,3,9\r\n1,11,8\r\n4,13,5\r\n11,12,16\r\n13,10,3\r\n4,4,7\r\n17,7,7\r\n8,4,4\r\n5,4,5\r\n16,6,12\r\n1,9,8\r\n11,2,8\r\n4,6,7\r\n9,3,6\r\n7,15,10\r\n6,5,14\r\n6,16,8\r\n15,8,15\r\n7,13,13\r\n3,10,11\r\n16,16,8\r\n2,12,7\r\n14,2,10\r\n3,11,7\r\n14,3,7\r\n14,14,12\r\n11,16,15\r\n11,14,15\r\n15,13,10\r\n11,11,16\r\n12,15,14\r\n15,9,4\r\n2,12,11\r\n14,3,13\r\n2,6,11\r\n10,9,17\r\n13,11,16\r\n5,14,6\r\n12,8,15\r\n6,12,6\r\n8,16,14\r\n12,17,7\r\n13,16,6\r\n4,15,11\r\n11,13,17\r\n9,11,17\r\n5,12,3\r\n12,3,7\r\n11,4,4\r\n2,7,9\r\n10,7,1\r\n4,15,9\r\n11,6,5\r\n10,16,16\r\n2,10,5\r\n11,8,17\r\n7,14,4\r\n3,5,13\r\n3,15,6\r\n10,7,4\r\n6,16,7\r\n5,16,9\r\n17,13,9\r\n10,4,16\r\n4,7,3\r\n8,9,13\r\n7,15,6\r\n8,11,16\r\n17,9,13\r\n5,5,14\r\n2,15,9\r\n11,2,11\r\n5,8,17\r\n13,4,5\r\n7,9,3\r\n17,11,12\r\n8,2,11\r\n5,14,15\r\n9,14,2\r\n8,17,6\r\n6,9,16\r\n7,14,17\r\n10,13,3\r\n11,7,17\r\n7,6,4\r\n11,11,1\r\n12,15,13\r\n14,8,16\r\n13,10,2\r\n7,14,16\r\n5,14,7\r\n17,10,14\r\n2,7,6\r\n2,8,7\r\n14,5,14\r\n13,16,7\r\n10,10,18\r\n5,13,13\r\n1,11,9\r\n14,4,9\r\n10,10,17\r\n11,5,16\r\n3,12,6\r\n6,6,15\r\n13,3,7\r\n6,10,4\r\n4,4,9\r\n7,16,14\r\n3,12,15\r\n3,15,10\r\n12,16,7\r\n2,8,9\r\n17,10,7\r\n11,11,18\r\n7,5,5\r\n10,3,14\r\n14,6,16\r\n13,10,16\r\n9,14,3\r\n7,6,15\r\n13,6,14\r\n13,3,6\r\n9,6,17\r\n8,3,10\r\n15,8,14\r\n15,6,9\r\n7,16,11\r\n6,2,7\r\n13,14,4\r\n15,12,15\r\n15,11,16\r\n13,8,15\r\n13,17,13\r\n3,5,11\r\n17,11,13\r\n7,15,9\r\n10,14,4\r\n7,4,5\r\n9,10,2\r\n10,4,14\r\n15,15,9\r\n13,9,2\r\n4,5,11\r\n8,3,5\r\n17,10,12\r\n18,6,11\r\n18,8,10\r\n11,16,7\r\n6,5,5\r\n13,2,8\r\n11,13,15\r\n8,15,16\r\n4,11,17\r\n15,16,10\r\n7,14,15\r\n17,10,10\r\n11,18,11\r\n5,13,11\r\n2,11,9\r\n9,15,5\r\n5,3,9\r\n8,9,3\r\n12,9,4\r\n7,3,13\r\n15,11,6\r\n4,16,10\r\n12,5,5\r\n4,6,14\r\n13,4,14\r\n6,17,5\r\n11,15,5\r\n18,11,11\r\n15,12,16\r\n17,10,9\r\n8,6,3\r\n11,6,3\r\n9,17,14\r\n16,12,10\r\n13,4,9\r\n7,10,4\r\n3,6,7\r\n13,17,9\r\n12,13,1\r\n14,9,5\r\n9,9,2\r\n6,17,7\r\n6,10,16\r\n4,7,10\r\n10,2,5\r\n16,4,13\r\n13,14,15\r\n18,9,11\r\n14,15,11\r\n16,5,9\r\n10,10,16\r\n1,12,10\r\n9,17,8\r\n10,16,13\r\n12,14,3\r\n14,4,14\r\n6,16,6\r\n8,14,4\r\n7,5,14\r\n9,11,16\r\n16,14,8\r\n4,3,10\r\n16,7,4\r\n14,3,6\r\n5,6,16\r\n6,4,5\r\n12,17,8\r\n13,17,8\r\n13,18,8\r\n10,14,17\r\n9,7,2\r\n9,8,17\r\n4,14,13\r\n4,7,14\r\n5,11,10\r\n3,14,6\r\n12,16,12\r\n11,5,3\r\n16,5,6\r\n7,3,8\r\n15,13,4\r\n12,2,14\r\n5,15,5\r\n4,8,13\r\n8,8,1\r\n9,5,5\r\n10,5,2\r\n16,12,7\r\n9,6,3\r\n6,1,11\r\n16,7,8\r\n12,10,1\r\n9,2,7\r\n12,15,3\r\n4,10,14\r\n13,18,10\r\n10,14,15\r\n13,5,3\r\n12,2,7\r\n2,11,7\r\n11,3,5\r\n12,15,4\r\n15,5,6\r\n16,9,4\r\n2,7,12\r\n5,17,11\r\n1,10,10\r\n14,11,4\r\n12,14,5\r\n13,11,3\r\n14,12,15\r\n2,9,14\r\n6,4,4\r\n10,14,16\r\n14,16,12\r\n14,16,10\r\n5,16,14\r\n11,2,7\r\n17,9,5\r\n5,4,12\r\n10,12,2\r\n14,15,12\r\n6,5,15\r\n7,18,8\r\n2,9,13\r\n3,15,8\r\n11,15,4\r\n3,14,10\r\n16,6,10\r\n15,15,6\r\n6,18,12\r\n17,9,9\r\n17,9,8\r\n10,16,6\r\n2,9,8\r\n6,17,8\r\n12,10,14\r\n4,5,9\r\n6,8,2\r\n9,11,1\r\n11,5,15\r\n3,9,5\r\n12,15,6\r\n3,11,12\r\n6,1,10\r\n5,14,11\r\n14,11,16\r\n3,16,12\r\n16,13,6\r\n12,9,17\r\n16,11,13\r\n12,12,1\r\n9,1,9\r\n13,12,2\r\n3,8,5\r\n10,2,7\r\n16,13,8\r\n3,9,13\r\n5,3,10\r\n6,3,4\r\n11,8,18\r\n7,16,5\r\n12,17,10\r\n8,13,16\r\n11,5,2\r\n15,3,8\r\n1,12,12\r\n16,12,5\r\n14,3,11\r\n15,9,12\r\n14,8,4\r\n4,11,5\r\n13,7,15\r\n5,4,11\r\n8,12,1\r\n5,13,6\r\n6,10,2\r\n17,4,10\r\n17,9,7\r\n4,15,14\r\n3,12,4\r\n16,11,6\r\n9,12,17\r\n11,19,10\r\n9,17,11\r\n15,8,4\r\n15,5,11\r\n12,14,16\r\n9,16,12\r\n6,16,12\r\n16,9,12\r\n5,12,14\r\n13,15,7\r\n3,7,5\r\n8,6,2\r\n11,15,13\r\n14,6,5\r\n8,9,2\r\n13,6,5\r\n1,8,10\r\n12,6,8\r\n5,4,13\r\n5,9,3\r\n5,15,11\r\n11,15,15\r\n13,10,18\r\n17,7,8\r\n11,4,14\r\n16,16,9\r\n3,9,12\r\n14,14,7\r\n3,13,12\r\n14,6,8\r\n15,7,5\r\n3,9,7\r\n8,3,4\r\n12,11,17\r\n14,13,5\r\n18,8,9\r\n4,13,8\r\n17,9,6\r\n8,14,2\r\n8,7,3\r\n12,10,4\r\n15,14,12\r\n13,8,17\r\n4,13,4\r\n15,8,7\r\n14,3,12\r\n5,14,4\r\n1,10,8\r\n13,12,16\r\n8,16,13\r\n15,6,5\r\n11,17,9\r\n10,7,16\r\n8,15,5\r\n6,16,5\r\n4,16,9\r\n3,5,9\r\n15,10,15\r\n8,13,4\r\n15,13,16\r\n4,11,15\r\n5,11,16\r\n7,5,16\r\n11,6,15\r\n14,10,16\r\n16,14,10\r\n9,13,16\r\n10,17,9\r\n8,4,13\r\n6,3,6\r\n13,8,18\r\n11,15,3\r\n14,4,13\r\n6,13,3\r\n5,3,7\r\n4,6,12\r\n5,16,10\r\n14,15,5\r\n3,14,12\r\n7,4,6\r\n18,6,10\r\n8,3,12\r\n4,6,8\r\n3,13,6\r\n5,2,8\r\n7,15,14\r\n15,14,4\r\n15,15,8\r\n13,2,9\r\n14,10,4\r\n14,14,4\r\n13,16,9\r\n6,7,3\r\n2,13,12\r\n16,9,6\r\n14,13,14\r\n8,16,7\r\n11,10,4\r\n11,12,17\r\n8,12,4\r\n17,8,10\r\n8,15,15\r\n12,3,12\r\n6,3,12\r\n14,5,16\r\n6,5,10\r\n6,11,5\r\n11,15,14\r\n3,10,7\r\n13,4,10\r\n16,5,10\r\n12,16,13\r\n14,17,11\r\n17,8,11\r\n8,10,1\r\n7,16,10\r\n10,5,3\r\n17,12,9\r\n14,8,3\r\n5,15,12\r\n12,3,8\r\n16,9,10\r\n12,5,2\r\n17,7,6\r\n11,17,14\r\n16,11,5\r\n16,4,9\r\n5,6,15\r\n10,7,3\r\n5,12,15\r\n11,3,16\r\n5,6,10\r\n12,13,2\r\n9,17,12\r\n12,6,14\r\n5,15,7\r\n15,5,4\r\n7,17,8\r\n3,10,14\r\n19,10,10\r\n5,5,9\r\n3,7,9\r\n7,16,9\r\n3,9,8\r\n4,14,12\r\n11,10,2\r\n12,18,7\r\n2,9,7\r\n12,3,9\r\n8,3,6\r\n15,9,15\r\n2,8,10\r\n2,10,10\r\n3,8,10\r\n3,9,4\r\n12,3,11\r\n13,1,9\r\n2,10,13\r\n10,16,14\r\n11,4,5\r\n14,9,15\r\n3,6,8\r\n1,8,9\r\n12,2,12\r\n11,11,3\r\n3,9,9\r\n3,5,8\r\n4,13,6\r\n7,3,11\r\n3,12,9\r\n2,11,12\r\n6,6,4\r\n7,12,4\r\n15,6,11\r\n9,13,17\r\n16,14,11\r\n14,2,11\r\n6,3,9\r\n8,9,16\r\n18,10,9\r\n16,6,11\r\n12,16,15\r\n5,13,5\r\n7,17,14\r\n13,12,15\r\n8,2,12\r\n18,11,8\r\n10,12,16\r\n6,8,14\r\n13,4,8\r\n4,9,3\r\n5,7,5\r\n17,12,12\r\n3,13,10\r\n2,10,12\r\n18,13,11\r\n12,4,15\r\n10,3,10\r\n14,16,8\r\n11,14,14\r\n14,14,5\r\n8,3,15\r\n8,15,13\r\n11,1,7\r\n12,6,2\r\n8,13,15\r\n2,8,14\r\n9,12,2\r\n6,5,12\r\n13,6,16\r\n13,6,4\r\n13,2,13\r\n14,3,10\r\n4,12,4\r\n16,12,8\r\n14,11,15\r\n10,11,4\r\n5,12,2\r\n11,16,4\r\n9,3,12\r\n3,11,9\r\n15,4,8\r\n14,16,13\r\n6,9,17\r\n5,11,2\r\n8,18,9\r\n4,9,9\r\n9,15,12\r\n12,13,4\r\n10,5,16\r\n3,15,11\r\n8,8,16\r\n18,7,7\r\n10,16,15\r\n2,12,13\r\n1,10,11\r\n4,10,4\r\n5,6,13\r\n8,16,11\r\n7,6,17\r\n3,4,13\r\n3,16,9\r\n7,15,4\r\n11,12,3\r\n10,6,3\r\n9,17,7\r\n8,11,2\r\n11,17,12\r\n10,18,7\r\n16,9,14\r\n14,15,7\r\n3,15,7\r\n13,17,10\r\n16,6,14\r\n13,2,11\r\n14,3,9\r\n6,3,8\r\n8,6,17\r\n7,8,16\r\n15,10,4\r\n5,5,5\r\n14,14,10\r\n17,12,11\r\n12,10,3\r\n15,5,12\r\n4,5,10\r\n14,11,2\r\n4,9,13\r\n6,4,7\r\n14,2,9\r\n18,11,10\r\n14,7,4\r\n16,6,8\r\n1,10,9\r\n2,7,8\r\n18,10,13\r\n6,10,1\r\n16,9,13\r\n11,7,2\r\n16,11,12\r\n10,8,16\r\n6,2,10\r\n9,3,15\r\n12,17,11\r\n5,3,12\r\n15,9,5\r\n1,10,7\r\n11,17,8\r\n7,10,17\r\n11,16,3\r\n5,3,11\r\n16,15,9\r\n4,14,6\r\n2,12,8\r\n8,7,2\r\n9,5,17\r\n14,15,8\r\n14,16,7\r\n12,2,6\r\n11,10,3\r\n18,10,8\r\n16,15,11\r\n7,13,17\r\n16,11,11\r\n6,14,6\r\n15,9,16\r\n9,3,7\r\n16,11,14\r\n7,10,2\r\n6,6,3\r\n4,3,13\r\n6,13,5\r\n11,9,17\r\n7,17,6\r\n15,5,14\r\n15,14,7\r\n11,2,13\r\n5,16,6\r\n12,1,7\r\n15,8,13\r\n3,4,9\r\n13,4,13\r\n2,10,6\r\n15,14,5\r\n2,9,10\r\n5,9,2\r\n3,6,13\r\n2,8,11\r\n11,3,9\r\n7,6,2\r\n10,15,16\r\n9,17,10\r\n11,9,16\r\n5,10,6\r\n6,15,4\r\n12,6,16\r\n12,5,15\r\n15,12,10\r\n14,8,15\r\n8,14,16\r\n3,11,5\r\n14,15,14\r\n14,9,3\r\n8,18,12\r\n15,16,8\r\n13,4,12\r\n6,16,14\r\n4,8,14\r\n14,6,7\r\n15,7,7\r\n12,13,5\r\n2,13,13\r\n8,7,18\r\n6,4,14\r\n7,4,3\r\n3,9,10\r\n5,5,4\r\n4,10,17\r\n18,8,11\r\n8,11,3\r\n13,5,13\r\n4,7,16\r\n10,11,17\r\n6,3,11\r\n17,7,11\r\n13,14,14\r\n6,6,16\r\n13,4,11\r\n12,8,2\r\n5,5,12\r\n12,9,3\r\n5,8,4\r\n6,12,15\r\n13,1,12\r\n1,11,13\r\n16,7,13\r\n11,5,14\r\n7,13,5\r\n13,8,16\r\n16,7,5\r\n15,10,2\r\n8,14,3\r\n10,17,7\r\n12,16,4\r\n14,9,4\r\n1,9,13\r\n4,13,13\r\n2,8,12\r\n5,5,10\r\n10,3,13\r\n11,16,5\r\n10,15,15\r\n15,4,5\r\n1,8,8\r\n10,9,16\r\n2,5,12\r\n11,9,3\r\n7,9,15\r\n12,10,17\r\n6,8,15\r\n11,14,6\r\n10,3,7\r\n15,13,7\r\n5,10,4\r\n8,9,17\r\n3,7,6\r\n3,9,15\r\n11,10,18\r\n4,5,8\r\n7,3,7\r\n17,5,9\r\n16,13,13\r\n14,6,15\r\n14,4,12\r\n9,17,13\r\n3,5,10\r\n9,14,4\r\n11,8,1\r\n6,12,16\r\n17,9,14\r\n16,12,14\r\n4,13,14\r\n7,6,16\r\n14,4,11\r\n3,7,7\r\n18,11,12\r\n11,17,7\r\n17,13,7\r\n4,13,11\r\n8,14,5\r\n1,11,11\r\n14,5,12\r\n13,13,4\r\n7,13,16\r\n10,1,12\r\n6,10,15\r\n10,4,3\r\n4,14,14\r\n4,15,5\r\n10,9,15\r\n18,11,6\r\n12,1,12\r\n17,5,7\r\n16,8,15\r\n17,9,10\r\n4,7,4\r\n13,13,16\r\n17,14,9\r\n2,8,13\r\n2,12,12\r\n5,6,14\r\n16,14,14\r\n15,6,13\r\n15,5,9\r\n5,2,11\r\n3,10,5\r\n12,2,9\r\n16,13,12\r\n5,6,7\r\n10,9,1\r\n5,9,17\r\n6,11,3\r\n7,3,6\r\n10,18,10\r\n16,7,3\r\n3,8,11\r\n16,8,3\r\n8,13,17\r\n12,8,1\r\n11,9,2\r\n15,5,8\r\n7,2,13\r\n3,10,13\r\n2,9,12\r\n7,6,3\r\n14,17,8\r\n3,15,9\r\n12,3,4\r\n6,15,5\r\n7,4,14\r\n9,2,12\r\n13,5,12\r\n18,7,9\r\n13,15,4\r\n7,10,3\r\n6,4,11\r\n4,8,3\r\n14,16,6\r\n16,13,11\r\n9,4,15\r\n16,5,12\r\n17,12,13\r\n14,7,6\r\n16,3,12\r\n7,11,3\r\n14,9,17\r\n10,13,15\r\n14,12,16\r\n6,4,12\r\n10,3,11\r\n15,10,6\r\n2,8,6\r\n10,12,3\r\n12,17,13\r\n18,9,8\r\n4,14,8\r\n7,5,4\r\n13,15,11\r\n6,15,8\r\n4,13,12\r\n12,4,14\r\n13,13,14\r\n8,1,9\r\n15,11,2\r\n6,4,6\r\n7,16,13\r\n3,5,7\r\n16,8,7\r\n14,4,6\r\n7,15,12\r\n5,13,8\r\n15,9,6\r\n14,12,12\r\n7,17,7\r\n9,10,16\r\n14,15,13\r\n1,12,8\r\n16,8,6\r\n18,9,10\r\n13,16,10\r\n13,11,2\r\n12,11,4\r\n15,11,4\r\n7,11,17\r\n11,8,3\r\n15,12,8\r\n10,1,7\r\n12,3,14\r\n16,12,12\r\n4,9,17\r\n10,2,10\r\n9,12,0\r\n4,6,11\r\n11,3,13\r\n5,8,15\r\n9,18,9\r\n10,6,16\r\n4,5,7\r\n12,2,11\r\n8,2,7\r\n7,13,4\r\n10,2,15\r\n6,9,2\r\n16,7,14\r\n3,12,10\r\n14,2,8\r\n15,6,6\r\n5,4,4\r\n10,6,18\r\n1,11,12\r\n13,14,12\r\n6,13,15\r\n13,12,17\r\n9,6,4\r\n10,14,3\r\n8,16,8\r\n9,5,4\r\n5,7,13\r\n3,10,9\r\n9,15,4\r\n11,3,12\r\n11,3,7\r\n9,16,5\r\n8,10,3\r\n5,5,6\r\n11,7,18\r\n15,6,10\r\n12,17,14\r\n15,12,14\r\n4,11,2\r\n11,17,5\r\n12,11,15\r\n4,3,8\r\n11,16,6\r\n5,16,8\r\n1,11,6\r\n7,2,7\r\n10,9,2\r\n14,5,8\r\n8,15,3\r\n10,19,10\r\n10,17,13\r\n18,11,9\r\n18,13,8\r\n5,3,13\r\n12,14,2\r\n15,7,15\r\n17,10,6\r\n15,10,17\r\n6,7,16\r\n14,4,7\r\n12,12,15\r\n10,7,2\r\n10,3,9\r\n6,7,17\r\n16,15,10\r\n4,5,12\r\n4,12,10\r\n9,16,9\r\n15,16,6\r\n13,3,9\r\n17,6,12\r\n4,5,14\r\n14,13,6\r\n6,2,13\r\n3,4,8\r\n13,11,17\r\n3,13,15\r\n2,10,11\r\n5,14,14\r\n6,15,9\r\n10,6,1\r\n12,8,3\r\n15,15,5\r\n17,12,10\r\n12,14,15\r\n11,5,17\r\n4,9,6\r\n18,9,5\r\n8,2,8\r\n12,17,9\r\n9,15,14\r\n17,7,12\r\n15,15,13\r\n14,12,14\r\n1,7,8\r\n11,2,10\r\n15,3,6\r\n6,9,14\r\n4,9,16\r\n9,15,16\r\n15,12,13\r\n8,3,9\r\n16,11,7\r\n7,4,16\r\n4,16,7\r\n10,3,15\r\n8,16,4\r\n4,4,13\r\n8,11,17\r\n17,13,8\r\n12,10,0\r\n14,5,7\r\n8,1,7\r\n14,6,10\r\n5,15,15\r\n6,14,14\r\n17,12,6\r\n8,7,17\r\n8,6,5\r\n13,7,16\r\n14,15,6\r\n9,5,15\r\n5,13,4\r\n10,3,3\r\n10,16,4\r\n8,17,8\r\n5,3,5\r\n12,14,14\r\n12,3,6\r\n2,13,8\r\n18,9,13\r\n1,13,8\r\n15,10,3\r\n2,5,7\r\n6,5,7\r\n10,15,3\r\n12,14,4\r\n4,16,13\r\n11,14,4\r\n12,8,18\r\n10,5,5\r\n9,12,16\r\n12,18,11\r\n5,15,13\r\n14,9,16\r\n9,6,15\r\n4,11,10\r\n11,15,17\r\n9,4,4\r\n16,11,8\r\n11,16,13\r\n10,5,15\r\n4,6,10\r\n10,16,12\r\n5,5,13\r\n12,5,16\r\n9,8,3\r\n8,15,14\r\n3,12,7\r\n11,9,1\r\n5,11,15\r\n13,3,13\r\n14,7,15\r\n8,4,15\r\n12,12,17\r\n13,13,15\r\n2,7,5\r\n6,12,3\r\n14,15,9\r\n13,15,8\r\n11,3,6\r\n4,14,7\r\n6,14,4\r\n15,5,13\r\n12,9,1\r\n13,14,13\r\n7,7,1\r\n18,10,11\r\n8,13,2\r\n7,14,2\r\n9,5,16\r\n1,7,12\r\n4,11,16\r\n17,7,9\r\n17,10,11\r\n13,5,11\r\n12,13,15\r\n12,2,13\r\n10,15,6\r\n2,13,10\r\n4,3,7\r\n17,6,10\r\n3,14,14\r\n5,15,8\r\n18,10,7\r\n11,18,8\r\n10,3,8\r\n10,15,7\r\n5,6,5\r\n2,15,8\r\n14,6,6\r\n10,16,8\r\n3,11,4\r\n16,9,16\r\n13,13,3\r\n7,9,17\r\n15,9,14\r\n8,4,3\r\n6,6,2\r\n9,17,5\r\n14,4,4\r\n13,15,12\r\n13,17,7\r\n6,3,14\r\n14,6,14\r\n17,8,8\r\n7,15,3\r\n7,14,3\r\n6,18,11\r\n18,10,6\r\n10,15,4\r\n9,18,6\r\n13,17,5\r\n13,11,18\r\n15,13,6\r\n6,6,17\r\n13,9,4\r\n4,12,6\r\n6,14,13\r\n18,9,12\r\n3,5,12\r\n2,12,6\r\n16,4,8\r\n16,10,15\r\n11,5,11\r\n8,13,3\r\n2,7,7\r\n6,6,13\r\n10,3,12\r\n13,1,11\r\n10,11,18\r\n15,4,9\r\n4,7,11\r\n12,5,4\r\n7,17,13\r\n4,8,16\r\n1,9,9\r\n3,12,5\r\n9,16,11\r\n7,4,4\r\n9,2,8\r\n4,6,4\r\n4,4,6\r\n12,3,10\r\n7,7,18\r\n6,7,2\r\n9,10,17\r\n13,16,13\r\n8,8,18\r\n9,2,5\r\n5,16,5\r\n17,6,6\r\n10,11,3\r\n8,5,14\r\n13,4,6\r\n5,12,5\r\n1,9,11\r\n2,10,8\r\n17,8,14\r\n11,5,4\r\n4,11,7\r\n16,8,5\r\n10,2,11\r\n13,5,4\r\n5,3,6\r\n6,17,9\r\n17,6,8\r\n7,7,4\r\n7,2,10\r\n12,4,3\r\n6,8,3\r\n4,9,4\r\n15,9,11\r\n9,16,6\r\n15,3,13\r\n12,11,16\r\n15,11,3\r\n9,1,8\r\n15,7,11\r\n3,6,9\r\n7,16,8\r\n8,10,18\r\n10,15,13\r\n7,3,9\r\n3,8,4\r\n6,2,9\r\n10,13,2\r\n17,5,12\r\n14,14,6\r\n13,3,12\r\n16,15,8\r\n9,4,16\r\n10,1,8\r\n16,12,11\r\n13,9,16\r\n17,10,8\r\n16,5,15\r\n2,11,6\r\n7,5,2\r\n7,12,17\r\n10,4,6\r\n13,13,6\r\n12,8,17\r\n9,13,4\r\n2,6,6\r\n14,16,9\r\n5,7,11\r\n10,4,13\r\n14,16,14\r\n12,8,16\r\n13,2,6\r\n4,10,5\r\n18,12,9\r\n9,2,13\r\n11,2,9\r\n9,6,16\r\n17,6,9\r\n4,10,15\r\n12,1,9\r\n3,8,12\r\n7,14,14\r\n2,4,10\r\n8,5,13\r\n10,16,10\r\n6,15,14\r\n9,1,7\r\n5,10,3\r\n8,12,17\r\n2,13,6\r\n16,8,11\r\n4,8,17\r\n17,15,10\r\n10,1,11\r\n15,12,7\r\n5,14,16\r\n15,12,3\r\n8,7,16\r\n17,6,11\r\n12,5,17\r\n11,16,14\r\n12,2,8\r\n6,12,2\r\n17,11,4\r\n9,18,11\r\n5,4,9\r\n9,6,18\r\n8,2,10\r\n9,3,14\r\n5,6,12\r\n3,8,7\r\n8,1,11\r\n4,10,12\r\n5,2,9\r\n3,13,14\r\n3,6,14\r\n11,2,14\r\n12,6,15\r\n8,17,13\r\n15,10,16\r\n7,13,15\r\n8,14,13\r\n7,15,2\r\n10,18,8\r\n14,5,15\r\n7,14,12\r\n9,11,18\r\n7,15,5\r\n15,17,8\r\n11,13,4\r\n14,7,17\r\n7,8,18\r\n10,8,1\r\n12,16,11\r\n11,6,16\r\n5,8,6\r\n12,15,8\r\n9,5,3\r\n4,14,4\r\n14,14,14\r\n2,6,12\r\n4,11,6\r\n3,12,8\r\n12,12,18\r\n4,14,15\r\n14,12,6\r\n18,7,12\r\n2,9,9\r\n6,7,15\r\n14,9,14\r\n15,16,12\r\n9,10,18\r\n18,12,7\r\n14,7,5\r\n10,6,14\r\n8,12,2\r\n5,16,11\r\n3,13,7\r\n17,14,10\r\n2,14,5\r\n6,2,8\r\n8,14,17\r\n13,15,15\r\n4,14,10\r\n2,4,11\r\n3,11,13\r\n7,1,9\r\n9,12,1\r\n3,15,12\r\n12,18,10\r\n7,11,1\r\n6,14,15\r\n16,13,9\r\n3,11,11\r\n15,12,12\r\n4,14,11\r\n6,17,11\r\n16,14,9\r\n12,15,11\r\n11,18,6\r\n6,1,9\r\n7,15,16\r\n8,1,13\r\n4,6,13\r\n12,9,18\r\n11,4,10\r\n4,13,7\r\n17,15,7\r\n7,3,5\r\n8,9,15\r\n6,16,9\r\n12,15,15\r\n16,8,10\r\n5,9,4\r\n5,10,17\r\n11,12,2\r\n13,3,5\r\n6,5,11\r\n7,2,6\r\n16,4,11\r\n4,13,9\r\n9,16,10\r\n2,5,10\r\n4,8,6\r\n8,16,6\r\n9,1,6\r\n14,8,14\r\n11,12,15\r\n9,3,10\r\n13,8,5\r\n14,8,6\r\n6,13,4\r\n6,3,5\r\n17,13,10\r\n6,13,13\r\n17,8,13\r\n16,15,13\r\n17,13,12\r\n16,13,10\r\n14,4,8\r\n15,3,10\r\n13,14,16\r\n4,12,12\r\n12,11,2\r\n6,5,3\r\n12,9,2\r\n4,14,9\r\n3,8,13\r\n5,16,13\r\n15,13,5\r\n16,4,12\r\n10,17,6\r\n11,2,5\r\n9,11,15\r\n11,6,17\r\n9,13,3\r\n17,13,13\r\n10,3,5\r\n6,14,5\r\n15,13,9\r\n17,10,13\r\n13,16,5\r\n12,4,5\r\n7,18,11\r\n16,9,5\r\n8,2,6\r\n7,17,11\r\n8,2,14\r\n4,9,5\r\n11,12,6\r\n6,16,11\r\n2,14,8\r\n14,10,2\r\n9,8,1\r\n6,10,5\r\n8,17,7\r\n7,2,12\r\n16,5,11\r\n7,11,16\r\n10,8,2\r\n13,17,12\r\n11,13,2\r\n5,5,11\r\n11,3,15\r\n4,17,7\r\n16,7,15\r\n5,5,7\r\n15,15,14\r\n15,3,7\r\n14,14,13\r\n14,6,4\r\n6,5,8\r\n13,4,7\r\n10,10,1\r\n4,13,3\r\n14,5,5\r\n12,9,16\r\n8,12,3\r\n17,14,8\r\n4,8,15\r\n9,15,3\r\n4,13,15\r\n10,2,14\r\n5,7,7\r\n2,11,13\r\n18,7,13\r\n5,9,16\r\n13,12,14\r\n13,10,15\r\n9,16,13\r\n13,7,6\r\n12,4,8\r\n7,9,16\r\n8,17,12\r\n15,14,10\r\n1,7,7\r\n16,5,7\r\n5,10,2\r\n15,9,3\r\n4,13,10\r\n7,14,5\r\n2,10,7\r\n11,10,1\r\n11,4,2\r\n11,16,8\r\n15,11,15\r\n7,7,16\r\n7,16,12\r\n5,5,8\r\n5,11,7\r\n4,4,8\r\n10,18,13\r\n12,3,13\r\n6,17,13\r\n15,10,5\r\n3,13,5\r\n13,16,12\r\n9,4,14\r\n3,6,10\r\n18,13,13\r\n14,11,5\r\n3,11,14\r\n9,8,4\r\n15,7,4\r\n14,6,3\r\n15,15,11\r\n13,5,8\r\n10,10,3\r\n4,15,7\r\n3,13,9\r\n4,10,13\r\n15,15,10\r\n12,7,2\r\n7,2,11\r\n6,8,5\r\n9,11,2\r\n3,6,4\r\n14,10,3\r\n6,8,16\r\n4,7,15\r\n2,7,13\r\n3,9,6\r\n16,9,11\r\n9,14,14\r\n10,18,14\r\n13,3,14\r\n6,15,11\r\n8,1,8\r\n15,8,5\r\n5,12,7\r\n3,7,4\r\n10,4,15\r\n1,7,10\r\n2,14,7\r\n11,16,9\r\n4,11,4\r\n5,15,14\r\n10,5,17\r\n15,3,12\r\n16,9,15\r\n12,14,6\r\n10,16,5\r\n6,8,4\r\n9,5,6\r\n7,1,10\r\n7,11,2\r\n5,15,6\r\n7,5,17\r\n18,7,8\r\n15,11,13\r\n4,6,9\r\n12,16,5\r\n10,2,12\r\n5,8,3\r\n9,8,2\r\n7,17,10\r\n9,13,1\r\n15,4,7\r\n16,8,4\r\n7,2,9\r\n5,13,12\r\n14,12,17\r\n5,10,5\r\n4,7,9\r\n15,8,16\r\n13,8,3\r\n13,12,4\r\n8,7,4\r\n14,10,17\r\n5,15,9\r\n8,3,3\r\n8,5,5\r\n6,2,11\r\n12,15,5\r\n14,2,14\r\n9,18,8\r\n5,11,14\r\n17,11,8\r\n4,15,12\r\n6,10,14\r\n12,6,17\r\n9,18,7\r\n16,14,5\r\n15,9,7\r\n13,13,13\r\n9,15,6\r\n16,12,9\r\n12,12,3\r\n11,10,16\r\n15,14,15\r\n8,10,17\r\n4,11,8\r\n14,4,10\r\n11,12,18\r\n8,5,3\r\n11,15,7\r\n18,10,12\r\n9,16,8\r\n7,10,18\r\n16,14,6\r\n7,12,15\r\n4,11,14\r\n13,7,2\r\n15,12,4\r\n16,12,15\r\n11,15,9\r\n6,11,4\r\n3,4,10\r\n11,9,18\r\n11,15,16\r\n9,11,3\r\n5,10,1\r\n8,3,7\r\n16,13,4\r\n11,18,12\r\n8,19,9\r\n6,5,6\r\n15,13,8\r\n7,18,10\r\n14,13,3\r\n13,4,15\r\n8,11,4\r\n8,15,7\r\n17,8,5\r\n8,5,4\r\n3,6,5\r\n6,3,15\r\n8,1,12\r\n8,6,16\r\n4,16,12\r\n14,13,11\r\n9,1,11\r\n13,13,5\r\n13,8,2\r\n1,11,7\r\n8,3,8\r\n16,11,9\r\n8,2,9\r\n7,9,18\r\n4,11,3\r\n10,9,18\r\n14,7,14\r\n10,14,5\r\n4,9,7\r\n2,14,11\r\n10,2,13\r\n4,5,13\r\n8,16,15\r\n2,11,14\r\n3,10,8\r\n7,6,18\r\n6,15,6\r\n13,5,7\r\n14,8,2\r\n10,11,2\r\n6,18,9\r\n10,6,2\r\n16,7,11\r\n6,3,10\r\n10,16,7\r\n5,13,16\r\n8,5,16\r\n5,11,5\r\n14,12,2\r\n7,12,3\r\n17,13,5\r\n15,7,3\r\n14,10,14\r\n14,14,11\r\n13,4,16\r\n10,9,19\r\n9,2,6\r\n12,7,4\r\n17,11,14\r\n7,1,8\r\n11,10,15\r\n11,6,18\r\n15,14,14\r\n8,17,9\r\n12,7,3\r\n10,4,5\r\n8,12,16\r\n6,15,12\r\n8,18,13\r\n6,12,14\r\n6,13,14\r\n11,6,4\r\n6,15,10\r\n13,15,6\r\n15,13,15\r\n9,15,17\r\n14,7,2\r\n15,14,9\r\n9,18,12\r\n14,6,13\r\n5,10,14\r\n15,4,11\r\n7,7,2\r\n6,10,18\r\n11,7,15\r\n14,8,17\r\n9,12,18\r\n11,12,1\r\n12,15,16\r\n10,2,6\r\n10,8,17\r\n4,5,4\r\n8,2,5\r\n17,7,10\r\n0,10,10\r\n4,11,13\r\n15,6,8\r\n13,18,9\r\n4,4,12\r\n3,7,10\r\n7,4,15\r\n6,17,12\r\n11,15,6\r\n14,17,9\r\n13,2,10\r\n9,9,18\r\n8,2,15\r\n3,8,6\r\n10,17,5\r\n6,11,18\r\n10,12,17\r\n13,5,5\r\n1,13,12\r\n8,6,15\r\n16,12,4\r\n4,12,7\r\n10,12,1\r\n12,5,7\r\n4,7,5\r\n4,12,16\r\n16,7,7\r\n15,10,14\r\n11,3,4\r\n8,4,6";

        public static void Run()
        {
            (HashSet<ImmutablePoint3D> coords, bool[,,] drop) = ProcessInput(input);
            
            int xdelta = drop.GetLength(0) - 1;
            int ydelta = drop.GetLength(1) - 1;
            int zdelta = drop.GetLength(2) - 1;
            Console.WriteLine($"Created a {xdelta}x{ydelta}x{zdelta} cube.");

            //First, let's naively assume that all blocks are isolated and not touching anything, so their surface area is a full 6 sides each.
            int sides1 = coords.Count * 6;

            //Now we find how many cubes are actually touching. For each 2 cubes that are touching, substract 2 sides.
            //We check {X,Y,Z+1}, {X,Y+1,Z}, {X+1,Y,Z}. That way we're only checking in 1 direction and avoiding any duplicates.
            foreach(ImmutablePoint3D coord in coords)
            {
                ImmutablePoint3D[] neighbors = new ImmutablePoint3D[] { new(coord.X, coord.Y, coord.Z+1), new(coord.X, coord.Y+1, coord.Z), new(coord.X+1, coord.Y, coord.Z) };
                foreach(ImmutablePoint3D neighbor in neighbors)
                {
                    if (coords.Contains(neighbor))
                    {
                        sides1 -= 2;
                    }
                }
            }

            Console.WriteLine($"Number of sides, including interior surface area: {sides1}");

            //Part 2: Now we need to check only the outside surface.
            //To do this, we have to check:
            // 1) Every air tile that's NOT inside the rock itself,
            // 2) Every rock tile that's touching out-of-bounds. Remember, out-of-bounds counts as surface area.
            //So, we'll do a depth first search.
            //The search starts with all the outermost tiles of the cube, which will satisfy 2) and also make sure we miss no valid air tiles.
            //Then the search will spread from air tile to air tile, but will NOT spread to rock tiles.
            //At each tile searched: If we're air and our neighbor is rock, add 1 side. If we're rock and our neighbor is OOB, add 1 side.
            bool[,,] visited = new bool[xdelta + 1, ydelta + 1, zdelta + 1];
            int sides2 = 0;
            HashSet<ImmutablePoint3D> toCheck = new() { };
            for (int y = 0; y <= ydelta; y++)
            {
                for (int z = 0; z <= zdelta; z++)
                {
                    toCheck.Add(new(0, y, z));
                    toCheck.Add(new(xdelta, y, z));
                }
            }
            for (int x = 0; x <= xdelta; x++)
            {
                for (int z = 0; z <= zdelta; z++)
                {
                    toCheck.Add(new(x, 0, z));
                    toCheck.Add(new(x, ydelta, z));
                }
            }
            for (int x = 0; x <= xdelta; x++)
            {
                for (int y = 0; y <= ydelta; y++)
                {
                    toCheck.Add(new(x, y, 0));
                    toCheck.Add(new(x, y, zdelta));
                }
            }
            //Done adding all the outermost tiles.

            ImmutablePoint3D nextCheck;
            while (toCheck.Count > 0) //Each air tile checked will add its neighbor air tiles to this list, thus propagating the search. We're done when this list is empty.
            {

                nextCheck = toCheck.First();
                toCheck.Remove(nextCheck);
                DepthFirstSearch(nextCheck.X, nextCheck.Y, nextCheck.Z, drop, visited, ref sides2, toCheck);
            }

            Console.WriteLine($"Finished checking! Exterior surface area: {sides2}");

        }
        
        public static (HashSet<ImmutablePoint3D>, bool[,,]) ProcessInput(string input)
        {
            string[] inputByLine = Utils.SplitLines(input); 
            HashSet<ImmutablePoint3D> coords = new();
            foreach (string line in inputByLine)
            {
                string[] splitLine = line.Split(',');
                coords.Add(new ImmutablePoint3D(int.Parse(splitLine[0]), int.Parse(splitLine[1]), int.Parse(splitLine[2])));
            }

            int maxx = coords.Max(coord => coord.X);
            int maxy = coords.Max(coord => coord.Y);
            int maxz = coords.Max(coord => coord.Z);
            int minx = coords.Min(coord => coord.X);
            int miny = coords.Min(coord => coord.Y);
            int minz = coords.Min(coord => coord.Z);

            int xdelta = maxx - minx;
            int ydelta = maxy - miny;
            int zdelta = maxz - minz;

            bool[,,] drop = new bool[xdelta + 1, ydelta + 1, zdelta + 1];

            foreach (ImmutablePoint3D coord in coords)
            {
                drop[coord.X - minx, coord.Y - miny, coord.Z - minz] = true;
            }

            return (coords, drop);
        }

        public static void DepthFirstSearch(int x, int y, int z, bool[,,] cube, bool[,,] visited, ref int sides, HashSet<ImmutablePoint3D> toCheck)
        {
            //Don't visit the same tiles twice!
            if (visited[x, y, z])
            {
                return;
            }
            visited[x, y, z] = true;

            bool isSolid = cube[x, y, z];

            int xdelta = cube.GetLength(0) - 1;
            int ydelta = cube.GetLength(1) - 1;
            int zdelta = cube.GetLength(2) - 1;
            List<(int x, int y, int z)> offsets = new() { (1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, 1, 0), (0, 0, 1), (0, 0, -1) };
            foreach ((int x, int y, int z) offset in offsets)
            {
                int newx = x + offset.x;
                int newy = y + offset.y;
                int newz = z + offset.z;

                bool oob = newx < 0 || newx > xdelta || newy < 0 || newy > ydelta || newz < 0 || newz > zdelta;
                if (oob)
                {
                    if (isSolid)
                    {
                        sides++;
                    }
                    continue;
                }

                if (!isSolid)
                {
                    bool otherCube = cube[newx, newy, newz];
                    if (otherCube)
                    {
                        sides++;
                    }
                    if (!visited[newx, newy, newz])
                    {
                        toCheck.Add(new(newx, newy, newz));
                    }
                }
            }
        }

        public struct ImmutablePoint3D
        {
            public int X;
            public int Y;
            public int Z;

            public ImmutablePoint3D(int x, int y, int z)
            {
                X = x;
                Y = y;
                Z = z;
            }

            public override bool Equals(object? obj)
            {
                return obj is ImmutablePoint3D d &&
                       X == d.X &&
                       Y == d.Y &&
                       Z == d.Z;
            }

            public override int GetHashCode()
            {
                return HashCode.Combine(X, Y, Z);
            }
        }
    }
}
